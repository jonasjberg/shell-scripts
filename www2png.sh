#!/usr/bin/env bash

# www2png -- cutycapt wrapper
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Convert html to jpg/png/pdf/.. etc., with cutycapt.
#
# Copyright (C) 2015-2018 Jonas Sj√∂berg
# https://github.com/jonasjberg

# Restricts what cutycapt can do to just this one thing.
# Converts a webpage to a image, like taking a "print screen" of an entire
# webpage, useful for capturing whole forum threads etc..
# usage: www2png <URL> <TARGET>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ------------------------------------------------------------------------------

# Use these settings when running cutycapt:
EXTENSION="png"
FLAGS="--out-format=${EXTENSION} --javascript=on --java=off --delay=5000"

# ------------------------------------------------------------------------------

set -o errexit -o noclobber -o nounset -o pipefail

URL="$1"            # The URL to capture (http:...|file:...|...)
TARGET="${2:-}"     # The target file (.png|pdf|ps|svg|jpeg|...)
PROGNAME="$(basename -- $0)"
TIMESTAMP="$(date +%F\ %H:%M:%S)"


function die()
{
    local msg="${1:-"ABORTING because of unspecified error."}"
    printf '%s ERROR: %s\n\n' "$PROGNAME" "$msg" 1>&2
    exit ${2:-1}
}

function show_usage()
{
    printf 'usage: %s <URL> <TARGET>\n\n' "$PROGNAME"
    printf '       <URL>       The URL to capture (http:...|file:...|...)\n'
    printf '       <TARGET>    The target file    (.png|pdf|ps|svg|jpeg|...)\n\n'
    printf '       Target is optional and defaults to using whatever comes\n'
    printf "       after the last '/' in the URL with '.png' appended.\n"
}


# Check for required program.
if ! command -v "cutycapt" &>/dev/null
then
    die 'Could not execute "cutycapt", is it installed? Is it in your $PATH?'
fi

if ! [[ ${URL} && ${URL-x} ]]               # is URL set?
then
    show_usage
    exit 2
fi

if ! [[ ${TARGET} && ${TARGET-x} ]]
then
    # TARGET is NOT set. Extract last part of URL
    URL="${URL%/}"          # Remove trailing slash if present
    URL_tail="${URL##*/}"   # Get everything after the last '/'

    # Remove all non-alphanumerics/underscores/dashes
    URL_tail="$(sed 's/[^a-zA-Z0-9_-]/-/g' <<< "$URL_tail")"

    # Remove any leading and trailing dashes/underlines
    URL_slugify="$(sed -r 's/^[_-]+//g ; s/[_-]+$//g' <<< "$URL_tail")"

    # Replace two or more dashes with a underline, collapse underlines
    URL_slugified="$(sed -r 's/[-]{2,}/_/g ; s/[_]{2,}/_/g' <<< "$URL_slugify")"

    # Update TARGET file name
    TARGET="$URL_slugified"
fi

if ! [[ $TARGET == *.${EXTENSION} ]]
then
    # Append EXTENSION to destination file name.
    TARGET="${TARGET}.${EXTENSION}"
fi

if [[ -e $TARGET ]]
then
    die "Target file already exists and would be overwritten"
fi

printf 'Saving "%s" to "%s" ..\n' "$URL" "$TARGET"
printf "Running cutycapt.. "
if cutycapt $FLAGS --url="$URL" --out="$TARGET"
then
    if ! [[ -e $TARGET ]]
    then
        die 'cutycapt did not produce a file'
    fi

    temp_name="${TARGET%.*}_labeled.${EXTENSION}"
    label_text="Generated by $PROGNAME at $TIMESTAMP from URL \'${URL}\'"

    printf "Adding label.."
    if convert "$TARGET" \
               -background White \
               label:"$label_text" \
               -gravity Center \
               -append \
               "$temp_name"
    then
        if [[ -e $temp_name ]]
        then
            mv -- "$temp_name" "$TARGET"
        fi

        printf " DONE!\n"
        exit 0
    else
        die 'Error while running convert'
    fi
else
    die 'Error while running cutycapt'
fi
