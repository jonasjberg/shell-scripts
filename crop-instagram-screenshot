#!/usr/bin/env bash

# CROP-INSTAGRAM-SCREENSHOT
# ~~~~~~~~~~~~~~~~~~~~~~~~~
# Could easily be used for cropping whatever by modifying DIMENSIONS.
# Copyright(C)2015 Jonas Sj√∂berg
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# DIMENSIONS sets region to crop out and effectively save.
#
# <width>   x   <height>   +   <X>   +   <Y>
# ^^^^^^^^^^^^^^^^^^^^^^       ^^^^^^^^^^^^^
# Crop rectangle size          Crop rectangle upper left corner position

DIMENSIONS="640x640+0+172"
# Crops a screenshot of Instagram taken with an iPhone (4)

# _______________________________________________________________________________


PROGNAME=$(basename $0)         # Name of this script
input=${1}
output=${2}

usage()
{
    printf "usage: %s <input> <output>\n\n" "$PROGNAME"
    printf "       <input>          The image to crop\n"
    printf "       <output>         Resulting cropped image filename\n\n"
    printf "       Output is optional and defaults to <input>_cropped\n"

    die
}

die()
{
    if [[ ! -z ${1} ]];
    then
        echo ${PROGNAME}: $* 1>&2
    fi
    exit 1
}

check_input_filename_is_set()
{
    if ! [[ ${input} && ${input-x} ]];
    then
        usage
    fi
}

check_input_file_exists()
{
    if ! [[ -e ${input} ]];
    then
        die "Input file doesn't exist! Exiting .."
    fi
}

generate_output_filename()
{
    input_no_ext=${input%.*}
    default_output_filename="${input_no_ext}_cropped.png"
    cropped=${output:-$default_output_filename}
}

check_output_file_exists()
{
    if [[ -e ${cropped} ]];
    then
        die "Cropped image already exists! Exiting .."
    fi
}

check_convert_installed()
{
    if ! command -v "convert" >/dev/null; then
        die "Can not execute convert! Is it installed? Is it in your \$PATH?"
    fi
}

crop_image()
{
    convert "${input}" -crop ${DIMENSIONS} "${cropped}"
}


# PROGRAM EXECUTION START
check_input_filename_is_set
check_input_file_exists
generate_output_filename
check_output_file_exists
check_convert_installed
echo "processing file: ${input}"
echo "writing to:      ${cropped}"
crop_image

exit 0

