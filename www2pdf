#!/usr/bin/env bash

# www2pdf -- wkhtmltopdf wrapper
# Written by Jonas Sj√∂berg in 2016
# https://github.com/jonasjberg
# _____________________________________________________________________
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# _____________________________________________________________________


function msg_error()
{
    printf '[ERROR] %s\n' "$*" >&2
}

function exit_msg()
{
    msg_error "$* .. Exiting."
    exit 1
}

function grabpagewithwkhtmltopdf()
{
    printf "Grabbing content using wkhtmltopdf ..\n"
    printf "%15s : %-65s\n" "Source URL" "\""${1}"\""
    printf "%15s : %-65s\n" "Destination" "\""${2}"\""

    wkhtmltopdf "$1" "$2"
    return $?
}

function slugifystring()
{
    # Options for string slugification.
    SPACE_CHAR='-'
    SEPAR_CHAR='_'
    GLUE_CHARS='-_'
    SAFE_CHARS="${GLUE_CHARS}a-zA-Z0-9\."

    # Strip everything before and including '//'.
    slug="${1#*//}"

    # Remove any trailing '/'.
    slug=${slug%/}

    # Replace '/' with SEPAR_CHAR.
    slug="${slug//\//${SEPAR_CHAR}}"

    # Replace everything that is not in 'SAFE_CHARS' with a dash
    slug="${slug//[^${SAFE_CHARS}]/${SEPAR_CHAR}}"

    # Remove any leading and trailing dashes/underlines
    slug="$(echo "$slug" | sed -r 's/^[_-]+//g')"
    slug="$(echo "$slug" | sed -r 's/[_-]+$//g')"

    echo "$slug"
}


# Make sure wkhtmltopdf is available.
if ! command -v "wkhtmltopdf" >/dev/null
then
    exit_msg "This script requires wkhtmltopdf"
fi

if [ $# -eq 0 ]
then
    FMT="%-8s %s\n"
    printf "$FMT" "Usage:" "$(basename $0) [URL] [DEST]"
    printf "$FMT" "" "Saves [URL] as a pdf to [DEST] with wkhtmltopdf."
    printf "\n"
    printf "$FMT" "" "Destination [DEST] is optional and defaults to a "
    printf "$FMT" "" "variation of [URL] with a leading YYYYMMDD date."
    exit 1
else
    url="${1:-}"
    [ -z "$url" ] && exit_msg "Got empty URL"

    dest="${2:-$(slugifystring "$1")}"
    [ -z "$dest" ] && exit_msg "Destination is empty (slugifystring failed)"

    # Prepend todays date in YYYYMMDD format.
    dt="$(date +%Y%m%d)"
    dest="${dt}_${dest}"

    # Append '.pdf' if not already present.
    # http://stackoverflow.com/a/11031028
    [[ $dest == *.pdf ]] || dest+=.pdf

    # Abort if destination file already exists.
    [ -e "$dest" ] && exit_msg "Destination file exists"

    grabpagewithwkhtmltopdf "$url" "$dest"
    exit $?
fi
